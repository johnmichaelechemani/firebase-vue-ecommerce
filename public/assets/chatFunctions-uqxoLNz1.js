import{u as D,M as E,N as w,J as _,j as m,m as J,O as N,Q as M,S as I,U as O,V as y,W as F,X as Q,Y as S}from"./index-B-cudqEO.js";const{user:U,auth:j}=D(),h=(a,l)=>[a,l].sort().join("_");new Promise(a=>{const l=E(j,t=>{U.value=t,l(),a()})});const d=w(),n=_.value.userId,c=m([]),q=m({}),A=()=>{const a=m([]),l=s=>{p(s)},t=m(""),f=async s=>{const e=h(n,s),g={id:`temp_${Date.now()}`,senderId:n,recipientId:s,message:t.value,isSending:!0,timestamp:new Date};c.value.push(g);try{await N(M(d,`chats/${e}`),{participants:{[n]:!0,[s]:!0},lastMessage:t.value,sender:n,reciever:s,timestamp:I()},{merge:!0});const u=await O(y(d,`chats/${e}/messages`),{senderId:n,recipientId:s,message:t.value,timestamp:I()});c.value=c.value.map(i=>i.id===g.id?{...i,id:u.id,isSending:!1}:i),localStorage.setItem(`messages_${e}`,JSON.stringify(c.value)),t.value=""}catch(u){console.error("Firebase message send error:",u)}finally{t.value=""}},p=s=>{try{const e=h(n,s),g=localStorage.getItem(`messages_${e}`);c.value=g?JSON.parse(g):[];const u=F(y(d,`chats/${e}/messages`),Q("timestamp","asc")),i=M(d,"chats",e),b=S(i,o=>{if(o.exists()){const r=o.data();r&&r.lastMessage&&(q.value[e]=r.lastMessage)}}),$=S(u,o=>{try{const r=o.docs.map(v=>({id:v.id,...v.data()}));c.value=r,localStorage.setItem(`messages_${e}`,JSON.stringify(r))}catch(r){console.error("❌ Message Mapping Error:",{error:r.message,snapshot:o.docs})}},o=>{console.error("❌ Snapshot Listener Error:",{error:o.message,query:u})});a.value.push($),a.value.push(b)}catch(e){console.error("❌ General Messages Loading Error:",{error:e.message,userId:n,receiverId:s})}};return J(()=>{a.value.forEach(s=>s()),a.value=[],p()}),{sendMessage:f,messages:c,message:t,selectedMall:l,getChatId:h,loadMessages:p}};export{A as c,h as g,q as l,c as m};
